apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "minotar-skind.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "minotar-skind.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "minotar-skind.chart" . }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "minotar-skind.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ template "minotar-skind.fullname" . }}-headless
  updateStrategy:
  {{- toYaml .Values.updateStrategy | nindent 4 }}

  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "minotar-skind.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ include "minotar-skind.chart" . }}
        {{- if .Values.pod.labels }}
{{ toYaml .Values.pod.labels | indent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "minotar-skind.serviceAccountName" . }}

      restartPolicy: {{ .Values.restartPolicy }}

      {{- if .Values.antiAffinity }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "minotar-skind.name" . }}
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
      {{- end }}

      containers:
        - name: skind
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - --server.http-listen-port={{ .Values.containerPort }}

          - --cache.uuid.backend=migrate
          - --cache.uuid.badger-path=/skind-badger/badger_cache_uuid/
          - --cache.uuid.bolt-path=/skind-bolt/bolt_cache_uuid.db

          - --cache.userdata.backend=migrate
          - --cache.userdata.badger-path=/skind-badger/badger_cache_userdata/
          - --cache.userdata.bolt-path=/skind-bolt/bolt_cache_userdata.db

          - --cache.textures.backend=bolt
          - --cache.textures.bolt-path=/ephemeral-cache/bolt_cache_textures.db

          - --mcclient.useragent={{ .Values.mcclient.userAgent }}
          - --mcclient.sessionserver-url={{ .Values.mcclient.sessionServerURL }}
          - --mcclient.profile-url={{ .Values.mcclient.profileURL }}

          securityContext:
            readOnlyRootFilesystem: {{ .Values.readOnlyRootFilesystem }}
            runAsNonRoot: {{ .Values.runAsNonRoot  }}
            runAsUser: {{ .Values.runAsUser }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          livenessProbe:
            {{- toYaml .Values.livenessProbe | trim | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | trim | nindent 12 }}
          volumeMounts:
          - mountPath: "/skind-bolt"
            name: bolt-cache-pvc
          - mountPath: "/skind-badger"
            name: badger-cache-pvc
          - name: ephemeral-cache
            mountPath: /ephemeral-cache

      initContainers:
        - name: skind-data-permission-fix
          image: busybox
          command: ["/bin/chmod","-R","777", "/skind-bolt", "/skind-badger"]
          volumeMounts:
          - mountPath: "/skind-bolt"
            name: bolt-cache-pvc
          - mountPath: "/skind-badger"
            name: badger-cache-pvc

      volumes:
        - name: ephemeral-cache
          emptyDir: {}

  # Make sure to update init container
  volumeClaimTemplates:
  - metadata:
      name: bolt-cache-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: do-block-storage
  - metadata:
      name: badger-cache-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: do-block-storage
